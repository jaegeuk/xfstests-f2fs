#! /bin/bash
# FS QA Test No. f2fs/002
#
# This test detects a f2fs-specific issue which is resolved by:
#    f2fs: fix SSA updates resulting in corruption
# The purpose is to check whether filesystem metadata becomes inconsistent
# after fcollapse was called.
#
#-----------------------------------------------------------------------
# Copyright (c) 2015 Jaegeuk Kim.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/log
. ./common/punch

# real QA test starts here
_supported_fs f2fs

rm -f $seqres.full
rm -f $tmp.log

_require_scratch
_require_scratch_shutdown
_require_xfs_io_command "fcollapse"

_scratch_mkfs > /dev/null 2>&1

# collapse without sync
_run_test()
{
	testfile=$SCRATCH_MNT/$1.$seq.$$

	_scratch_mount

	$XFS_IO_PROG -f -c "pwrite 0 5m" -c fsync $testfile > /dev/null
	[ $1 -eq 1 ] && sync
	$XFS_IO_PROG -c "fcollapse 64k 2m" $testfile > /dev/null

	echo "godown"
	src/godown -v -n $SCRATCH_MNT >> $seqres.full

	echo "unmount"
	umount $SCRATCH_MNT

	# curious if FS consistent at start
	_check_scratch_fs $SCRATCH_DEV
	[ $? -ne 0 ] && _fatal "fsck failed"
}

# run without sync
_run_test 0

# run with sync
_run_test 1

status=0
exit
